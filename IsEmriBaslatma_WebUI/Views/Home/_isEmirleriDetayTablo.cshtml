@using IsEmriBaslatma_DataAccesLayer.Model
@using IsEmriBaslatma_WebUI.ModelView
@model List<IS_EMRI_KALEMLERI>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
<link rel="stylesheet" type="text/css" href="path/to/your/styles.css">

<style>
    .bold-row {
        font-weight: bold;
    }
</style>


<div class="card mb-10">
    <div class="card mb-4">
        <div class="card-header d-lg-flex">
            <h4 class="mb-0">İş Emri Kalemleri</h4>
        </div>
    </div>
    <div class="tab-content p-4" id="pills-tabContent-striped-rows">
        <div class="tab-pane tab-example-design fade show active" id="pills-striped-rows-design" role="tabpanel" aria-labelledby="pills-striped-rows-design-tab">
            <div class="table-responsive">
                <form action="/Home/MiktarSapma" method="post">
                    <table class="table" id="dataTable">
                        <thead>
                            <tr>
                                <th>IS_EMRI_NO</th>
                                <th>KAYNAK</th>
                                <th>STOK KODU</th>
                                <th>STOK İSMİ</th>
                                <th>MAL GRUBU</th>
                                <th>OB</th>
                                <th>MİKTAR</th>
                                <th>URUN_BASI_MIKTAR</th>
                                <th>✓</th>
                                <th>Sapma</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (IS_EMRI_KALEMLERI item in Model)
                            {
                                string rowClass = item.BOLD == "X" ? "bold-row" : "";
                                bool sapmaDurum = item.SAPMA_DURUM == false; // sapma_durum null ise false olarak kabul edilsin


                                string rowBackgroundColor = sapmaDurum ? "" : "red"; // sapmaDurum false ise arka plan rengi kırmızı olsun

                                <tr class="@rowClass" style="background-color: @rowBackgroundColor">
                                    <td>@item.IS_EMRI_NO.TrimStart(new Char[] { '0' })</td>
                                    <td>@item.KAYNAK.TrimStart(new Char[] { '0' })</td>
                                    <td>@item.STOK_KODU.TrimStart(new Char[] { '0' })</td>
                                    <td>@item.STOK_ISMI</td>
                                    <td>@item.MAL_GRUBU</td>
                                    <td>@item.OLCU_BIRIMI</td>
                                    <td>@item.MIKTAR</td>
                                    <td>@item.URUN_BASINA_MIKTAR</td>
                                    @if (item.BOLD != "X")
                                    {
                                        <td class="text-center">
                                            @if (item.SAPMA_DURUM == true)
                                            {
                                                if (item.URUN_BASINA_MIKTAR == item.SAPMA.LastOrDefault().GERCEKLESEN_MIKTAR)
                                                {
                                                    <input type="checkbox" class="form-check-input check-input" checked data-id="@item.ID" id="check@item.id" name="" value="@item.ID" />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" class="form-check-input check-input" data-id="@item.ID" id="check@item.id" name="" value="@item.ID" />
                                                }
                                            }
                                            else
                                            {
                                                <input type="checkbox" class="form-check-input check-input" data-id="@item.ID" id="check@item.id" name="" value="@item.ID" />
                                            }

                                            @*<input type="checkbox" class="form-check-input check-input" data-id="@item.ID" id="check@item.id" name="" value="@item.ID" />*@
                                            <input type="hidden" name="checkDurum" value="@item.ID" />
                                        </td>
                                        <td class="text-center">
                                            <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#selo+@item.ID">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M11 15H6l7-14v8h5l-7 14z" /></svg>
                                            </button>
                                        </td>
                                    }
                                    else
                                    {

                                        <!-- Empty cells to maintain the structure -->
                                    }
                                </tr>
                            }
                        <tfoot>
                            <tr>
                                <td colspan="10" style="text-align:center">
                                    <textarea class="form-control" rows="3" placeholder="Not veya açıklama giriniz"></textarea>
                                </td>
                            </tr>



                            <tr>
                                <td colspan="9" style="text-align:right">
                                    <input type="button" class="btn btn-primary btn-xl" data-bs-target="#yeniAlternatifUrun" value="Satır Ekle" data-bs-toggle="modal" @*onclick="satirekle()"*@ />
                                </td>
                                <td class="text-center" style="text-align:right">
                                    <a href="/Home/IsEmriBaslatma" class="btn btn-danger btn-xl" style="white-space: nowrap;">Kaydet</a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

<script>
    $(document).ready(function () {
        $('tr').each(function () {
            var sapmaDurum = $(this).data('sapma-durum');
            if (sapmaDurum === false) {
                $(this).css('background-color', 'red');
            }
        });
    });
</script>



<script>
    $(document).ready(function () {
        $('#dataTable').DataTable();
    });
</script>
<script>
    function onchangeAndPost(value, itemId) {
        // AJAX isteği gönder
        $.ajax({
            url: '/Home/MiktarSapma', // Sunucuda ilgili controller action'ı işaret eden URL
            method: 'POST',
            data: { value: value, isKalemId: itemId },
            success: function (data) {
                // Başarılı yanıt durumunda gelen verilerle işlem yapılabilir
                console.log(data); // Örneğin, dönen verilerle sayfayı güncellemek gibi
            },
            error: function (xhr, status, error) {
                // Hata durumunda kullanıcıya bilgi verilebilir
                console.error(error);
            }
        });
    }
</script>

<script>

    function changeRowColor(input) {
        var row = input.parentNode.parentNode; // input'un üstündeki <td>, <tr>ye git, sonra <tr>yi seç


        if (input.value !== "") {
            row.style.backgroundColor = "yellow";
            concole.log = (input.value)
        }
        else {
            concole.log = (input.value)
            row.style.backgroundColor = ""; // Eğer input boşsa, satırın rengini sıfırla
        }
    }

</script>

<script>
    function callRFCWithStokKodu(stokKodu) {
        // AJAX isteği gönder
        $.ajax({
            url: '/Home/CallRFC', // Sunucuda ilgili controller action'ı işaret eden URL
            method: 'POST',
            data: { stokKodu: stokKodu },
            success: function (data) {
                // Başarılı yanıt durumunda gelen verilerle işlem yapılabilir
                console.log(data); // Örneğin, dönen verilerle sayfayı güncellemek gibi
            },
            error: function (xhr, status, error) {
                // Hata durumunda kullanıcıya bilgi verilebilir
                console.error(error);
            }
        });
    }


</script>

<script>
    function onchangeAndClear(input, itemId) {
        var urunBasinaMiktar = parseFloat(input.value); // Girilen değeri sayıya dönüştür

        // Satırın bulunduğu tabloyu ve bu satırı bul
        var table = document.getElementById('dataTable');
        var row = input.closest('tr');
        debugger;
        // Tablodaki bu satırın ürün başına miktar değerini bul
        var urunBasinaMiktarCell = row.querySelector('td:nth-child(8)');
        var urunBasinaMiktarText = urunBasinaMiktarCell.textContent.trim();
        var urunBasinaMiktarRow = parseFloat(urunBasinaMiktarText);
        console.log(urunBasinaMiktar);
        // Eğer girilen miktar ürün başına miktar ile aynı ise
        if (urunBasinaMiktar === urunBasinaMiktarRow) {
            // Kullanıcıya bir mesaj göster
            alert('Girilen miktar, ürün başına miktarla aynıdır.');

            // Metin kutusunu temizle
            input.value = '';

            // Opsiyonel olarak metin kutusuna odaklanabiliriz
            input.focus();
        }
    }
</script>



@*<script>
        function satirekle() {
            var table = document.querySelector('.table tbody'); // Tablonun tbody elementini seç

            // Yeni iş emri numarası
            var isEmriNo = "Yeni İş Emri"; // Örnek bir iş emri numarası

            // Yeni satır oluştur
            var newRow = document.createElement('tr');

            // Yeni satıra hücreler ekle
            newRow.innerHTML = `
                <td>${isEmriNo}</td>




        < td ></td >
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td class="text-center"><input type="checkbox" class="form-check-input check-input" /></td>
                <td class="text-center small"><input class="form-input text-input" type="text" style="width: 40px;" name="isKalemInputMikar" /></td>
                <td class="text-center"><button type="button" class="btn btn-primary btn-sm"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M11 15H6l7-14v8h5l-7 14z" /></svg></button></td>
            `;

            // Tabloya yeni satırı ekle
            table.appendChild(newRow);
        }
    </script>*@


@*<script>
        function satirekle() {
            var table = document.querySelector('.table tbody'); // Tablonun tbody elementini seç

            // Yeni iş emri numarası
            var isEmriNo = isEmriNo; // Örnek bir iş emri numarası

            // Yeni satır oluştur
            var newRow = document.createElement('tr');

            // Yeni satıra hücreler ekle
            newRow.innerHTML = `
                    < td ></td >
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td class="text-center"><input type="checkbox" class="form-check-input check-input" /></td>
            <td class="text-center small"><input class="form-input text-input" type="text" style="width: 40px;" name="isKalemInputMikar" /></td>
            <td class="text-center"><button type="button" class="btn btn-primary btn-sm"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M11 15H6l7-14v8h5l-7 14z" /></svg></button></td>
                `;

            // Tabloya yeni satırı ekle
            table.appendChild(newRow);
        }

    </script>*@


@*<script>
        document.addEventListener("DOMContentLoaded", function() {
            const checkboxes = document.querySelectorAll('.check-input');
            const textInputs = document.querySelectorAll('.text-input');

            checkboxes.forEach(function(checkbox) {
                checkbox.addEventListener('change', function() {
                    const id = checkbox.getAttribute('data-id');
                    const relatedTextInput = document.getElementById(`text${id}`);
                    if (checkbox.checked) {
                        relatedTextInput.enable = false
                    } else {
                        relatedTextInput.disabled = false;
                    }
                });
            });

            textInputs.forEach(function(input) {
                input.addEventListener('input', function() {
                    const id = input.getAttribute('data-id');
                    const relatedCheckbox = document.getElementById(`check${id}`);
                    if (input.value.trim() !== '') {
                        relatedCheckbox.disabled = true;
                    } else {
                        relatedCheckbox.disabled = false;
                    }
                });
            });
        });

    </script>*@